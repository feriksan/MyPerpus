<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="KodeBuku.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Judul.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Penulis.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Penerbit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tahun.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="KodeBuku.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Judul.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Penulis.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Penerbit.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="tahun.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>